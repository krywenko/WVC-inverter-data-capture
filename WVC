#!/bin/bash

volts=0
av=0
aa=0
watts=0
dv=0
da=0
n=0


filename=$2
Modem=$3
M1="$(echo $Modem | cut  -c1-2 )"
M2="$(echo $Modem | cut  -c3-4 )"
M3="$(echo $Modem | cut  -c5-6 )"
M4="$(echo $Modem | cut  -c7-8 )"

ModemTest="$(echo \\xf8\\x$M1\\x$M2\\x$M3\\x$M4\\xff\\xff\\x6b)" 

if [ -z  "$1" ]; then
echo "missing arguments in this order  ComPort  inverter.list  modemID"
exit -1
 fi
if [ -z  "$2" ]; then
echo "missing arguments in this order   ComPort  inverter.list  modemID"
exit -1
fi
if [ -z  "$3" ]; then
echo "missing arguments in this order  ComPort  inverter.list  modemID"
exit -1
fi
echo " Using modem  "$M1 $M2 $M3 $M4 " at port " $1 "  Using  inverter list " $2

I="$(ps -efww | grep '[W]VC /dev' | wc -l)"
echo  "virtural port " /dev/ttyWVCDUMMY$I

for (( ; ; ))
do

while read line; do
# reading each line
>  /dev/shm/ser-data$I
sleep .6

H1="$(echo $line | cut  -c1-2 )"

H2="$(echo $line | cut  -c3-4 )"

Payload="$(echo \\xf2\\x$M1\\x$M2\\x$M3\\x$M4\\x$H1\\x$H2\\x65)" 

echo  -en ${Payload}  > /tmp/ttyWVCDUMMY$I

sleep .6

OUTPUT="$(cat /dev/shm/ser-data$I | sed 's/<.*//' | sed 's/>//' | sed 's/0x//'  | sed -E ':a ; $!N ; s/\n\s+/ / ; ta ; P ; D' | tr -d '[:blank:]' | sed '/^$/d' | sed -nr '/^.{34,34}$/p')"
sleep .8
######Convert Hex to temp #########
TEMP="$(echo $OUTPUT | cut -c33-34)"
TDEC="$(echo $(( 16#$TEMP )))"
MQttT="$(cat 1200lookup |grep -o TMP$TDEC.* | cut -f2- -d:   | sed 's/[^0-9]*//g')"
 if [ $MQttT -eq 86 ]; then
     echo  " no  input from inverter "  $line
      # > /dev/shm/ser-data$I
        sleep .4
        echo -en ${ModemTest} > /tmp/ttyWVCDUMMY$I   
        sleep 2
        OUTPUT="$(cat /dev/shm/ser-data$I | sed 's/<.*//' | sed 's/>//' | sed 's/0x//'  | sed -E ':a ; $!N ; s/\n\s+/ / ; ta ; P ; D' | tr -d '[:blank:]' | sed '/^$/d' )"
          if [ -z  "$OUTPUT" ]; then
            echo $OUTPUT 
              echo " no COM  detected " 
             pkill interceptty
              sleep .4
             echo  " restarting COM"
              interceptty -s 'ispeed 9600 ospeed 9600' -l $1 /tmp/ttyWVCDUMMY$I -f hex >> /dev/shm/ser-data$I  &
              sleep .4
               echo  "started"  
           fi
     else
         echo  "Inverter  " $line\
         echo "Temp " $MQttT
         # ADD secondary procees to send DATa to  database or MQTT here
         mosquitto_pub -t "incoming/$3/TEMP-Energy/temperature-$line" -m "N:$MQttT"
######Convert Hex to VAC #########
TEMP="$(echo $OUTPUT | cut -c29-32 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttVAC="$(cat 1200lookup |grep -m 1 -o VAC$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "VAC  " $MQttVAC
# ADD secondary procees to send DATa to  database or MQTT here
mosquitto_pub -t "incoming/$3/AC-Energy/voltage-$line" -m "N:$MQttVAC"
######Convert Hex to AAC #########
TEMP="$(echo $OUTPUT | cut -c25-28 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
if [ ${MQttVAC%.*} -gt 160 ]; then
 MQttAAC="$(cat 1200lookup |grep -m 1 -o AACB$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
 #echo "high volt"
 else
MQttAAC="$(cat 1200lookup |grep -m 1 -o AACA$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
#echo "low volt"
fi
echo "AAC  " $MQttAAC
# ADD secondary procees to send DATa to  database or MQTT here
mosquitto_pub -t "incoming/$3/AC-Energy/current-$line" -m "N:$MQttAAC"
######Convert Hex to VDC #########
TEMP="$(echo $OUTPUT | cut -c21-24 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttVDC="$(cat 1200lookup |grep -m 1  -o VDC$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "VDC  " $MQttVDC
# ADD secondary procees to send DATa to  database or MQTT here
mosquitto_pub -t "incoming/$3/DC-Energy/voltage-$line" -m "N:$MQttVDC"
######Convert Hex to VAC #########
TEMP="$(echo $OUTPUT | cut -c17-20 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttADC="$(cat 1200lookup |grep -m 1 -o ADC$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "ADC  " $MQttADC
# ADD secondary procees to send DATa to  database or MQTT here
mosquitto_pub -t "incoming/$3/DC-Energy/current-$line" -m "N:$MQttADC"
   
   
av="$(echo $av+$MQttVAC |bc -l)"
aa="$( echo $aa+$MQttAAC |bc -l)"
dv="$(echo $dv+$MQttVDC |bc -l)"
da="$( echo $da+$MQttADC |bc -l)"
DC="$( echo $MQttVDC \* $MQttADC |bc -l)"
AC="$( echo $MQttVAC \* $MQttAAC |bc -l)"
mosquitto_pub -t "incoming/$3/DC-Energy/power-$line" -m "N:$DC"
mosquitto_pub -t "incoming/$3/AC-Energy/power-$line" -m "N:$AC"

n=$[$n+1]
    fi

done < $filename

if [ $n -eq 0 ]; then
 echo " no wattage data "
 else

    av="$( echo $av / $n | bc -l )"
 #   aa="$( echo $aa / $n | bc -l )"  #enambe for panel average
    dv="$( echo $dv / $n | bc -l )"
  #  da="$( echo $da / $n | bc -l )"   #enable for panel average 
  
    watts="$(echo $av \* $aa | bc -l | rev | cut -c 19- | rev)"
    echo  "AC watts " $watts
    mosquitto_pub -t "incoming/$3/AC-Energy/power-Total" -m "N:$watts"
 
    watts="$(echo $dv \* $da | bc -l | rev | cut -c 19- | rev)"
    echo  "DC watts " $watts
    mosquitto_pub -t "incoming/$3/DC-Energy/power-Total" -m "N:$watts"
   fi 
    av=0
    aa=0
    da=0
    dv=0
    n=0
    

done

