#!/bin/bash

filename=$2
Modem=$3
M1="$(echo $Modem | cut  -c1-2 )"
M2="$(echo $Modem | cut  -c3-4 )"
M3="$(echo $Modem | cut  -c5-6 )"
M4="$(echo $Modem | cut  -c7-8 )"

ModemTest="$(echo \\xf8\\x$M1\\x$M2\\x$M3\\x$M4\\x$H1\\x$H2\\x6b)" 

if [ -z  "$1" ]; then
echo "missing arguments in this order  ComPort  inverter.list  modemID"
exit -1
 fi
if [ -z  "$2" ]; then
echo "missing arguments in this order   ComPort  inverter.list  modemID"
exit -1
fi
if [ -z  "$3" ]; then
echo "missing arguments in this order  ComPort  inverter.list  modemID"
exit -1
fi
echo " Using modem  "$M1 $M2 $M3 $M4 " at port " $1 "  Using  inverter list " $2

for (( ; ; ))
do

while read line; do
# reading each line
>  ser-data
sleep .6

H1="$(echo $line | cut  -c1-2 )"

H2="$(echo $line | cut  -c3-4 )"

Payload="$(echo \\xf2\\x$M1\\x$M2\\x$M3\\x$M4\\x$H1\\x$H2\\x65)" 

echo  -en ${Payload}  > /tmp/ttyDUMMY

#echo -en '\xf2\xfb\x04\x11\x85\xc7\x84\x65' > /dev/ttyDUMMY
sleep .6

OUTPUT="$(cat ser-data | sed 's/<.*//' | sed 's/>//' | sed 's/0x//'  | sed -E ':a ; $!N ; s/\n\s+/ / ; ta ; P ; D' | tr -d '[:blank:]' | sed '/^$/d' | sed -nr '/^.{34,34}$/p')"
sleep .8
######Convert Hex to temp #########
TEMP="$(echo $OUTPUT | cut -c33-34)"
TDEC="$(echo $(( 16#$TEMP )))"
MQttT="$(cat 1200lookup |grep -o TMP$TDEC.* | cut -f2- -d:   | sed 's/[^0-9]*//g')"
 if [ $MQttT -eq 86 ]; then
     echo  " no  input from inverter "  $line
      # > ser-data
        sleep .4
        #echo -en '\xf8\xfb\x04\x11\x85\xff\xff\x6b' > /tmp/ttyDUMMY
        echo -en ${ModemTest} > /tmp/ttyDUMMY   
        sleep 2
        OUTPUT="$(cat ser-data | sed 's/<.*//' | sed 's/>//' | sed 's/0x//'  | sed -E ':a ; $!N ; s/\n\s+/ / ; ta ; P ; D' | tr -d '[:blank:]' | sed '/^$/d' )"
          if [ -z  "$OUTPUT" ]; then
            echo $OUTPUT 
              echo " no COM  detected " 
             pkill interceptty
              sleep .4
             echo  " restarting COM"
              interceptty -s 'ispeed 9600 ospeed 9600' -l $1 /tmp/ttyDUMMY -f hex >> ser-data  &
              sleep .4
               echo  "started"  
           fi
     else
         echo  "Inverter  " $line\
         echo "Temp " $MQttT
    fi

######Convert Hex to VAC #########
TEMP="$(echo $OUTPUT | cut -c29-32 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttVAC="$(cat 1200lookup |grep -m 1 -o VAC$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "VAC  " $MQttVAC

######Convert Hex to AAC #########
TEMP="$(echo $OUTPUT | cut -c25-28 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttAAC="$(cat 1200lookup |grep -m 1 -o AACA$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "AAC  " $MQttAAC

######Convert Hex to VDC #########
TEMP="$(echo $OUTPUT | cut -c21-24 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttVDC="$(cat 1200lookup |grep -m 1  -o VDC$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "VDC  " $MQttVDC

######Convert Hex to VAC #########
TEMP="$(echo $OUTPUT | cut -c17-20 | tac -rs .. | echo $(tr -d '\n') )"
TDEC="$(echo $(( 16#$TEMP )))"
MQttADC="$(cat 1200lookup |grep -m 1 -o ADC$TDEC.* | cut -f2- -d:   | sed 's/[^.0-9]*//g')"
echo "ADC  " $MQttADC

# ADD secondary procees to send DATa to  database or MQTT

done < $filename


done

